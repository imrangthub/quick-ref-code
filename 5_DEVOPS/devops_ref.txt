#################################################
#                 DEVOPS                        #
#################################################
https://www.youtube.com/watch?v=Wvf0mBNGjXY

select * from information_schema.processlist where Command='Sleep'
=================================================
#                  Basic                                          
================================================= 


--module-path C:\Z_MY_COMPUTER\Software\javafx18\lib 
--add-modules=javafx.controls,javafx.fxml

=================================================
#Linux | DEPLOYMENT                                          
=================================================

=>ssh imran@192.168.1.5
=>mv pappjar pappjar_23032022
=>scp papp.jar imran@192.168.1.5:/home/imran/appService
=>scp student-service-1.0.0.RELEASE.jar imran@192.168.1.2:/home/imran/appService


=>scp -r /home/imran/blPROJECT/deploymentProcess  imran@192.168.1.514:/home/imran/mySimpleFolder
Copying Directories to remote machine

=>scp  -r imran@192.168.1.514:/home/imran/mySimpleFolder /home/imran/blPROJECT/deploymentProcess
Copying directories from remote machine to local machine




=>java -jar student-service-1.0.0.RELEASE.jar --CONFIG_SERVER=configserver:http://192.168.1.2:9091 --eureka.client.serviceUrl.defaultZone=http://192.168.1.2:9092/eureka/
=>java -jar student-service-1.0.0.RELEASE.jar --server.port=8888 --CONFIG_SERVER=configserver:http://localhost:8080

=>java -jar zipkin-server-2.23.15-exec.jar --server.port=9410 --zipkin.storage.type=cassandra3 --zipkin.storage.cassandra3.ensure-schema=true --zipkin.storage.cassandra3.contact-points=localhost:9042 --zipkin.storage.cassandra3.username=imran --zipkin.storage.cassandra3.password=123456 --zipkin.storage.cassandra3.keyspace=spring_boot_keyspc

=================================================
#CURL                                         
=================================================


curl -XPOST -d "" http://172.16.254.122:8080/myservice
Post Call

curl https://www.cyberciti.biz/files/sticker/sticker_book.pdf --output output.pdf



curl --location --request POST 'http://localhost:8080/auth/token' --header 'client_id: e828a561ac324ae1b4f7c2be757c24a9' --header 'Content-Type: application/json' --data-raw '{"email": "zhaque@banglalink.net", "password": "asdfasdf", "grant_type": "client_credentials"}'




=================================================
# mysql                              
================================================= 
Bangla character issue:

ALTER TABLE openapi_otp_service MODIFY COLUMN otp_sms VARCHAR(255)  
    CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL;
	
	



=================================================
# WiFi                              
================================================= 
List all wireless network profiles: 
=>netsh wlan show profiles
=>netsh wlan show profile name="Profile_Name" key=clear
=>netsh wlan show profile "Sales Dept Network" key=clear | findstr Key





=================================================
# Nexus | Sonatype Nexus Repository Manager                            
================================================= 
.\nexus.exe /run


Upload artifact to nexus:
-------------------------------------------------
Modify pom.xml with repo location
Modify setting.xml with permission
=>mvn deploy

Dwonload artifact to nexus:
-------------------------------------------------
Modify pom.xml with dependent lib which you want to download
Modify setting.xml with mirrors
=>mvn compile | test | install



https://repo.maven.apache.org/maven2/

Create repository with Maven hosted
=>http://localhost:8081/repository/imranmadbar/
Create repository with Maven shapshort
=>http://localhost:8081/repository/imranmadbar-snapshot/
Create repository with Maven proxy
=>http://localhost:8081/repository/imranmadbar-proxy/
Create repository with Maven group
=>http://localhost:8081/repository/imran-group/




=================================================
# SSH | SHALL | cmd                            
================================================= 

=>ssh imran@192.168.8.10



=>Set-ExecutionPolicy Unrestricted
-Dcom.sun.management.jmxremote.ssl=false
-Dcom.sun.management.jmxremote.authenticate=false

=================================================
#                  Window | batch | .bat                                          
=================================================

=>services.msc 

=>msinfo32
Cores in your CPU in RUN command

#CMD
================================================= 
=>cd C:\Z_MY_COMPUTER\PROJECT\BS23_BANGLALINK
=>date
=>cd\
=>d:
=>dir
=>mkdir

=>copy README.txt d:\http\temp
=>ren README.txt READLATER.txt
=>del READLATER.txt
=>del *.*
=>rmdir myNewFolder
=>color 0a


=>systeminfo
=>driverquery
Lists Installed Drivers and Hardware

=>ipconfig
Networking Information
=>tasklist

>echo %JAVA_HOME%
=>echo %CATALINA_HOME%
=>netstat
=>tracert google.com

=>wmic MEMORYCHIP get BankLabel, DeviceLocator, MemoryType, TypeDetail, Capacity, Speed
=>wmic memorychip list full
RAM details

=>wmic cpu get loadpercentage



#Batch
================================================= 
test.bat
Show sample Msg:
------------------------------------------------

@echo off
title This is your first batch script!
echo Welcome to batch scripting!
pause


Create folder:
------------------------------------------------
WAY1
====

@echo off

if not exist "MyFolder" (
	echo File creating ....!
	mkdir "MyFolder"
) else (
    echo Folder already exists!
)
pause

WAY2
====
@echo off
for /f "tokens=2 delims==" %%a in ('wmic OS Get localdatetime /value') do set "dt=%%a"
set "YY=%dt:~2,2%" & set "YYYY=%dt:~0,4%" & set "MM=%dt:~4,2%" & set "DD=%dt:~6,2%"
set "HH=%dt:~8,2%" & set "Min=%dt:~10,2%" & set "Sec=%dt:~12,2%"
set "fullstamp=%YYYY%_%MM%_%DD%_H%HH%M%Min%S%Sec%"

echo fullstamp: "%fullstamp%"
mkdir "%fullstamp%"
pause


@echo off 
cd target
java -jar spring-boot-simple-web-0.0.1-SNAPSHOT.jar
echo "Done,  application run successfully !"
exit

=================================================
#  JAVA                                          
================================================= 

echo %JAVA_HOME%

Extract the Jar
Jar -xvf webapp-1.0.0.SNAPSHOT.jar

=>javap -verbose SimpleClsFile.class | findstr "major"
Check current .class file version


=================================================
#GIT  | git                                         
================================================= 
Between <<<<<<< and ======= are local   (Accept Left). 
Between ======= and >>>>>>> are  remote (Accept Right).


git log --oneline --decorate | grep -i CR
Tract the merged List 

Git Clone 
---------
=>git clone link..
=>git clone -b internDev --single-branch [clone link]


You can fetch all branches from all remotes like this:
git fetch --all

git branch -a - All branches.

git branch -r - Remote branches only.

git branch -l or git branch - Local branches only.

Check out, review, and merge locally
Step 1. Fetch and check out the branch for this merge request

git fetch origin
git checkout -b "main" "origin/main"
Step 2. Review the changes locally

Step 3. Merge the branch and fix any conflicts that come up

git fetch origin
git checkout "internDev"
git merge --no-ff "main"
Step 4. Push the result of the merge to GitLab

git push origin "internDev"


 =>git add pom.xml src
 
 
 
History check
--------------------------
=>git log --graph --pretty=format:"%C(yellow)%h%x09%Creset%C(cyan)%C(bold)%ad%Creset %C(green)%Creset %s" --date=short


=>git remote -v
=>git remote rm origin 
=>git remote add origin http://repo.banglalink.net:8181/open-api/openapi-discovery-eureka.git

=>git remote add origin http://repo.banglalink.net:8181/open-api/openapi-otp.git


=================================================
#Tomcat                                          
================================================= 

#Killing Port:
-------------------------------------------------
netstat -ano | findstr 8080
netstat -ano | findstr 3306
netstat -an | grep 80
taskkill /F /PID 2368

=> ./startup.sh 
=>sudo systemctl start tomcat.service
=>sudo systemctl status tomcat.service
=>sudo systemctl stop tomcat.service


https://stackoverflow.com/questions/48938921/error-while-deploying-spring-boot-war-file-on-tomcat-server

#Config
-------------------------------------------------

In server.xml set server port
<Connector port="8585" protocol="HTTP/1.1" connectionTimeout="20000" redirectPort="8443" />

In tomcat-users.xml set user
<role rolename="manager"/>
<role rolename="manager-gui"/>        
<role rolename="admin"/>
<role rolename="manager-script"/>
<user username="admin" password="admin" roles="admin,manager,manager-gui,manager-script" /> 


#Restart Tomcate Server
-------------------------------------------------
[root@cmhdbserver ~]# systemctl restart tomcat



#Tomcate Status
-------------------------------------------------
[root@cmhdbserver ~]# systemctl status tomcat



#Tomcat Log Out
-------------------------------------------------

[root@cmhdbserver ~]# tail -f /opt/tomcat/logs/catalina.out
OR
[root@rushmonodbserver logs]# cd /opt/tomcat9092/logs/
[root@rushmonodbserver logs]# tail -f catalina.out


#Tomcat Log Show in loca host
-------------------------------------------------

catalina.bat run



=================================================
#  NGINX | nginx                                          
================================================= 
=>start nginx
=>nginx -s stop	
=>nginx -s quit	
=>nginx -s reload	

=>ps -ef|grep nginx

=>nginx -s reopen	
Reopening log files



#Reverse Proxy
-------------------------------------------------

server {
	listen       8181;
	server_name  localhost;

location / {
		proxy_pass   http://localhost:8080;
	}
}

#Load Balancer
-------------------------------------------------
upstream upstreamGroup1 {
   server localhost:8080;
   server localhost:8282;
}
server {
	listen       70;
	server_name  localhost;

location / {
		proxy_pass   http://upstreamGroup1;
	}
}


Windows CMD
---------------------------------------------------
=>wmic process where name='nginx.exe' delete
=>nginx.exe -s quit



MySql proxy
-------------------------------------------
stream {
    include stream.conf;
}


In stream.conf file on the same folder of nginx.conf write down this 
upstream galera_cluster {
    server 127.0.0.1:3306; #node1
    zone tcp_mem 64k;
}

server {
    listen 3366; # MySQL default
    proxy_pass galera_cluster;
}



Access log:
-------------------------------------------
Disable access log:
http {
	access_log off;
	error_log off;
}


Froward Header
-------------------------------------------
server {
	listen       8282;
	server_name  localhost;

	location / {
			proxy_pass   http://localhost:8080;
			proxy_set_header X-Request-ID $request_id;

   
		}
}
	
	
Some helpful commands:
---------------------------------------------
Reload NGINX: /app/nginx/sbin/nginx –s reload

Test NGINX conf: /app/nginx/sbin/nginx –t

Check log: tail –f access.log


DebugScript1:
-----------------------------------

=>tail -f access.log | grep -v '200'  | grep -v '202'
Filtering status code except 200 and 202 

=>cat access.log | awk '{print $(NF-2)}'
Printing only destination IP: 

=> cat access.log | awk '{print $(NF-2)}' | sort | uniq --count
Print destination IP count: 


=>cat access.log | grep –v '200'  | grep –v '202' | awk '{print $(NF-2)}' | sort | uniq --count
You can mix between these commands to achieve your goal. For example, you want to see which destination server is failing:


=>tail -f access.log | grep '254.194'


DebugScript2:
-----------------------------------

=>tail -100000 ../logs/access.log | awk '{ print $8}'|sort |uniq --repeated --count
Print load balanced IPs and their count

=>tail -10000 access.log |awk '{print $12,$8}'|sort|uniq --repeated --count
Print load balanced IPs and their status count


=>tail -10000 /app/apihub/Nginx_LB/logs/access.log | grep prepaid|awk '{ total += $14; count++ } END { print total/count }'
Average RTT

=>for (( i = 5; i >=0; i-- )) ; do grep $(date +%d/%b/%Y:%R -d "-$i min") /app/apihub/Nginx_LB/logs/access.log; done| awk '{ print $8}'|sort |uniq --repeated --count
Last 5 minute request satus


=>grep prepaid access.log|tail -1000|awk '{ if ( $14 > .750 ) print $0 }'|wc -l
If RTT greater than:


=>for i in {1..20}; do curl -o /dev/null -s -w '%{http_code},%{time_namelookup},%{time_connect},%{time_pretransfer},%{time_starttransfer}, %{time_total}s\n' "http://10.74.10.10:443/api/v1/subscriptions/32286622/combined-usage-reports"  ; done
20 continuous calls to check DBSS API performance 

=>tail -1000 ../logs/access.log | grep prepaid|awk '{ if (max<$14){ max=$14 }}END {print max}'
Max RTT




Debug:
=> tail -f access.log | grep 53489776
=>tail -f access.log | grep -v "200"



nginx.conf for log
-------------------------------------------------
http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" $upstream_addr $upstream_response_time' " $request_time";
    access_log  /app/NginxFolder/logs/access.log   main;
}
	



=================================================
#         Jar add on Class Path                                          
================================================= 
#For Windows
-------------------------------------------------
install:install-file -Dfile=E:\jasperFont\Arial-Narrow-Italic.jar -DgroupId=com.mysoft.report-font -DartifactId=Arial-Narrow-Italic -Dversion=1.0.1 -Dpackaging=jar -DgeneratePom=true
install:install-file -Dfile=E:\jasperFont\Arial-Narrow.jar -DgroupId=com.mysoft.report-font -DartifactId=Arial-Narrow -Dversion=1.0.1 -Dpackaging=jar -DgeneratePom=true

#For Linux
-------------------------------------------------
install:install-file -Dfile=/home/imran/JAR_LIBRARY/ReportFont/Arial.jar   -DgroupId=com.mysoft.report-font -DartifactId=Arial -Dversion=1.0.1 -Dpackaging=jar    -DgeneratePom=true
install:install-file -Dfile=/home/lockman/snap/skype/common/Nikosh.jar   -DgroupId=com.mysoft.report-font -DartifactId=Nikosh -Dversion=1.0.1 -Dpackaging=jar    -DgeneratePom=true
install:install-file -Dfile=/home/imran/LIBRARY_AND_JAR/ReportFont/Arial-Narrow.jar -DgroupId=com.mysoft.report-font -DartifactId=Arial-Narrow -Dversion=1.0.1 -Dpackaging=jar -DgeneratePom=true
install:install-file -Dfile=/home/imran/JAR_LIBRARY/ReportFont/Arial-Narrow-Italic.jar   -DgroupId=com.mysoft.report-font -DartifactId=Arial-Narrow-Italic -Dversion=1.0.1 -Dpackaging=jar    -DgeneratePom=true
install:install-file -Dfile=/home/imran/LIBRARY_AND_JAR/ReportFont/segoeui.jar -DgroupId=com.mysoft.report-font -DartifactId=segoeui -Dversion=1.0.1 -Dpackaging=jar -DgeneratePom=true
install:install-file -Dfile=/home/imran/Desktop/odbcjar/ojdbc7.jar -DgroupId=com.oracle -DartifactId=ojdbc7 -Dversion=12.1.0 -Dpackaging=jar -DgeneratePom=true
install:install-file -Dfile=/home/imran/JAR_LIBRARY/ReportFont/segoeui.jar   -DgroupId=com.mysoft.report-font -DartifactId=segoeui -Dversion=1.0.1 -Dpackaging=jar    -DgeneratePom=true



=>java -jar -DMYSQL_HOST=127.0.0.1 arif-travel-agency-0.0.1-SNAPSHOT.jar
=================================================
#  Maven                                          
================================================= 
mvn -v
mvn clean
mvn package
mvn spring-boot:run

=>mvn dependency:tree



=>java -XX:+PrintFlagsFinal -version | grep ThreadStackSize
In Linux:


=>java -XX:+PrintFlagsFinal -version | findstr ThreadStackSize
In Windows:

=>java -XX:+PrintFlagsFinal -version | grep HeapSize
Linux Hepsze
=>java -XX:+PrintFlagsFinal -version | findstr HeapSize
Windows heap size

In case your physical memory size is more than 192 megabytes then default maximum heap size is one fourth of the physical memory.

=================================================
#                  GRADLE                                          
================================================= 

=>./gradlew dependencies
=>./gradlew clean build --refresh-dependencies
refresh the dependencies and download any missing dependencies

=>gradlew dependencies --configuration runtimeClasspath -q
Check class path dependencies 

=>gradle -version
=>gradle task
=>gradle task --all 



=>gradlew dependencies
=>gradlew dependencyInsight --dependency log4j-core
=>gradlew dependencyInsight --dependency log4j
=>./gradlew dependencyInsight --dependency log4j-core

=>gradlew dependencyInsight --dependency jaxb-core

Check Gradle dependencies jar version

# /etc/profile.d/gradle.sh
# export PATH=$PATH:/opt/gradle/gradle-7.4.2/bin


Installed on Linux
---------------------------------------------------------------------------------------
=>sudo unzip -d /opt/gradle
=>ls /opt/gradle/gradle-7.0.2


=>sudo nano /etc/profile.d/gradle.sh
Add the following lines in the file:

export GRADLE_HOME=/opt/gradle/gradle-7.0.2
export PATH=${GRADLE_HOME}/bin:${PATH}

=>sudo chmod +x /etc/profile.d/gradle.sh
 Then give the /etc/profile.d/gradle.sh file execute permission using the command below:
 
 =>sudo chmod +x /etc/profile.d/gradle.sh
Now load the environment variables as follows:

=>source /etc/profile.d/gradle.sh
=>gradle -v



Wapper
--------------------------------------------------
=>gradlew --version
=>gradlew init
=>gradlew.bat clean


=================================================
#  JENKING                                          
================================================= 
2fab04a40b4146beba38a3da5b9c9415

java -jar jenkins.war --httpPort=9999



@echo off
cd target 
java -jar spring-boot-simple-web-0.0.1-SNAPSHOT.jar
exit


=================================================
#  PYTHON                                          
================================================= 
=>python --version

FlaskServer:

import os
from flask import Flask
app = Flask(__name__)

@app.route('/home')
def hello():
		return 'I am good, how about you'
		
if __name__=="__main__":
	app.run()


Dockerfile:
FROM ubuntu:20.04
RUN apt-get update && apt-get install -y python-pip
RUN pip install flask
COPY myapp.py /app/
ENTRYPOINT FLASK_APP=/app/myapp.py flask run --host=0.0.0.0






=================================================
#  APP TESTING |  MEMORY CHECK                                          
================================================= 


view how much of memory consumption in spring boot app

Setup#1 Create spring boot app as .jar file and execute it using java -jar springboot-example.jar

Setup#1 Now open the CMD and type jconsole and hit enter.
=>jconsole

Setup#1 Note :- before opening the jconsole you need to run .jar file

Setup#1 Now you can see a window like below and it will appear application that previously ran in Local Process section.



=================================================
#  LOAD TESTING                                          
================================================= 

TPS=Transaction per second


AHUB 
-------------------------------------------------

AHUB = 25/PS


20 TPS testing for 1 minutes has been successful-Going for 40 TPS with 5 minutes now.
Please go with 30 TPS then 40




=================================================
# Firewall | Windows                                          
================================================= 
=>nslookup www.google.com
Get IP address
=>control firewall.cpl
Open firewall

=>netstat -a -n


Block any IP Address
-------------------------------------------------

In Windows Defender Firewall: 
=>Advanced Settings > Inbound Rules > New Rule > Custom. Add Ibbound, Outbound Rules.




=================================================
#Python |                                           
================================================= 

#DownloadUdamy
-------------------------------------------------

=>pip install -r requirements.txt

=>python udemy-dl.py CourseUrl --sub-lang en

=>python udemy-dl.py https://www.udemy.com/course/aws-certified-solutions-architect-associate-saa-c02/learn --sub-lang en





=================================================
#Physical Maching |  Linux  | OS                                      
================================================= 

PhysicalMachine
	OS=>
		Kernal=>
			Namespaces=>
				USER - Multiple
				NET  - 1
				NMT	 - 1
				PMAP - 1
			
			Cgroup
				Manageing CPU and RAM to each process
				
		Capability
				Access of User
		
				
				
				


=================================================
#CCNA | ccna| Cisco | Basic Networking                                         
================================================= 


Class A: The first bit always has to be 0.
Class B: The first 2 bits always have to be 10.
Class C: The first 3 bits always have to be 110.


Class A:        0.0.0.0   – 126.255.255.255
Class B:        128.0.0.0 – 191.255.255.255
Class C:        192.0.0.0 – 223.255.255.255


Private IP Ranges:
==================
Class A:        10.0.0.0/8      – 10.255.255.255
Class B:        172.16.0.0/12   – 172.31.255.255
Class C:        192.168.0.0/16  – 192.168.255.255



Class D, 224-239
For multicast addresses.
Class E, 240-255
Experimental.



DEFAULT SUBNET MASKS

Default Class A (N.H.H.H) mask: 255.0.0.0
Default Class B (N.N.H.H) mask: 255.255.0.0
Default Class C (N.N.N.H) mask: 255.255.255.0



#IPV4 ADDRESS CLASSES | ip | ipv4 | ip Address
-------------------------------------------------

No of subnets = 2^Subnetted bits.
No of Hosts per subnet = 2^no of non-subnetted bits.
Block Size = 256 - 





#CIDR | VariableLengthSubnetMask (VLSM) | vlsm  
-------------------------------------------------

ClassC:
=======
IP:         192.168.0.0/28
SubnetMask: 255.255.255.240

Subnet:     2^4 = 16
ValidHost: (2^4 - 2) = 14
BlockSize:  256 - 240 = 16


Subneting as below:
--------------------------------------------------
Subnet1=>   NetworkId	- 192.168.0.0
            FirstHost	- 192.168.0.1
			LastHost	- 192.168.0.14
			BroadCust	- 192.168.0.15

Subnet2=>   NetworkId	- 192.168.0.16
            FirstHost	- 192.168.0.17
			LastHost	- 192.168.0.30
			BroadCust	- 192.168.0.31 And so on...


Class C Subnetting chart:
----------------------------------------------------------------------------------------------------------------------------
CIDR                SubnetMask          NetworkBits     HostBits        Networks        BlockSizeORTotalHosts         ValidHosts
/24	                255.255.255.0	    0	            8	            1	                256	                        254
/25	                255.255.255.128	    1	            7	            2	                128	                        126
/26	                255.255.255.192	    2	            6	            4	                64	                        62
/27	                255.255.255.224	    3	            5	            8	                32	                        30
/28	                255.255.255.240	    4	            4	            16	                16	                        14
/29	                255.255.255.248	    5	            3	            32	                8	                        6
/30	                255.255.255.252	    6	            2	            64	                4	                        2


Class C Subnet Masks
---------------------------------------------------------------------------------------------
DecimalMask	       SubnetBits(s)	 HostBits(h)  NumberifSubnets=2s	NumberofHosts=2h-2
255.255.255.0	         0	            8	        0	                    254
255.255.255.128	         1	            7	        2	                    126
255.255.255.192	         2	            6	        4	                    62
255.255.255.224	         3	            5	        8	                    30
255.255.255.240	         4	            4	        16	                    14
255.255.255.248	         5	            3	        32	                    6
255.255.255.252	         6	            2	        64	                    2





ClassB:
=======
IP:         172.35.0.0/19
SubnetMask: 255.255.224.0

Subnet:     2^3 = 8
ValidHost: (2^13 - 2) = 8190


Subneting as below:
--------------------------------------------------
Subnet1=>   NetworkId	- 172.35.0.0 
            FirstHost	- 172.35.0.1 
			LastHost	- 172.35.30.255 
			BroadCust	- 172.35.31.255

Subnet2=>   NetworkId	- 172.35.32.0 
            FirstHost	- 172.35.32.1 
			LastHost	- 172.35.32.255 
			BroadCust	- 172.35.63.255

Class B Subnetting chart:
----------------------------------------------------------------------------------------------------------------------------
CIDR                SubnetMask          NetworkBits     HostBits        Networks        BlockSizeORTotalHosts         ValidHosts
/16	                255.255.0.0         0	            16	            1	                65536	                   65534
/17	                255.255.128.0	    1	            15	            2	                32768	                   32766
/18	                255.255.192.0	    2	            14	            4	                16384	                   16382
/19	                255.255.224.0	    3	            13	            8	                8192	                   8190
/20	                255.255.240.0	    4	            12	            16	                4096	                   4094
/21	                255.255.248.0	    5	            11	            32	                2048	                   2046
/22	                255.255.252.0	    6	            10	            64	                1024	                   1022
/23	                255.255.254.0	    7	            9	            128	                512	                       510
/24	                255.255.255.0	    8	            8	            256	                256	                       254
/25	                255.255.255.128	    9	            7	            512	                128	                       126
/26	                255.255.255.192	    10	            6	            1024	            64	                       62
/27	                255.255.255.224	    11	            5	            2048	            32	                       30
/28	                255.255.255.240	    12	            4	            4096	            16	                       14
/29	                255.255.255.248	    13	            3	            8192	            8	                       6
/30	                255.255.255.252	    14	            2	            16384	            4	                       2


Class B Subnet Masks
---------------------------------------------------------------------------------------------
DecimalMask	        SubnetBits(s)	HostBits(h)	   NumberifSubnets=2s	NumberofHosts=2h-2
255.255.0.0	            0	            16	            0	                    65,534
255.255.128.0	        1	            15	            2	                    32,766
255.255.192.0	        2	            14	            4	                    16,382
255.255.255.0	        8	            8	            256	                    254
255.255.255.128	        9	            7	            512	                    126
255.255.255.240	        12	            4	            4,096	                14
255.255.255.252	        14	            2	            16,384	                2





ClassA:
=======
IP:         10.128.240.48/30
SubnetMask: 255.255.255.252

Subnet:     2^2 = 4
ValidHost: (2^2 - 2) = 2


Subneting as below:
--------------------------------------------------
Subnet1=>   NetworkId	- 10.128.240.48 
            FirstHost	- 10.128.240.49  
			LastHost	- 10.128.240.50 
			BroadCust	- 10.128.240.51

Subnet2=>   NetworkId	- 10.128.240.52 
            FirstHost	- 10.128.240.53 
			LastHost	- 10.128.240.54 
			BroadCust	- 10.128.240.55
			
			
Class A Subnetting chart:
----------------------------------------------------------------------------------------------------------------------------
CIDR                SubnetMask          NetworkBits     HostBits        Networks        BlockSizeORTotalHosts         ValidHosts
/8	                255.0.0.0	        0	            24	            1	                16777216	            16777214
/9	                255.128.0.0	        1	            23	            2	                8388608	                8388606
/10	                255.192.0.0	        2	            22	            4	                4194304	                4194302
/11	                255.224.0.0	        3	            21	            8	                2097152	                2097150
/12	                255.240.0.0	        4	            20	            16	                1048576	                1048574
/13	                255.248.0.0	        5	            19	            32	                524288	                524286
/14	                255.252.0.0	        6	            18	            64	                262144	                262142
/15	                255.254.0.0	        7	            17	            128	                131072	                131070
/16	                255.255.0.0		    8	            16	            256                 65536	                65534
/17	                255.255.128.0	    9	            15	            512	                32768	                32766
/18	                255.255.192.0	    10	            14	            1024	            16384	                16382
/19	                255.255.224.0	    11	            13	            2048	            8192	                8190
/20	                255.255.240.0	    12	            12	            4096	            4096	                4094
/21	                255.255.248.0	    13	            11	            8192	            2048	                2046
/22	                255.255.252.0	    14	            10	            16384	            1024	                1022
/23	                255.255.254.0	    15	            9	            32768	            512	                    510
/24	                255.255.255.0	    16	            8	            65536	            256	                    254
/25	                255.255.255.128	    17	            7	            131072	            128	                    126 
/26	                255.255.255.192	    18	            6	            262144	            64	                    62
/27	                255.255.255.224	    19	            5	            524288	            32	                    30
/28	                255.255.255.240	    20	            4	            1048576	            16	                    14
/29	                255.255.255.248	    21	            3	            2097152	            8	                    6
/30	                255.255.255.252	    22	            2	            4194304	            4	                    2


Class A Subnet Masks
---------------------------------------------------------------------------------------------
DecimalMask	        SubnetBits(s)	HostBits(h)	   NumberifSubnets=2s	NumberofHosts=2h-2
255.0.0.0	            0	            24	                0	             16,777,214
255.128.0.0		        2	            23	                2                8,388,606
255.192.0.0		        4	            22	                4                4,194,302
255.255.255.0	        6553            8	                65,536	         254
255.255.255.192	        262144          7	                262,144          62
255.255.255.240	        104857          5	                1,048,576	     14
255.255.255.252	        4194304 	    3	                4,194,304	     2









#BitCounting
-------------------------------------------------
128	64	32	16	8	4	2	1
0	0	0	0	0	0	0	0



10000000 equates to 128 = 128

11000000 equates to 128 + 64 = 192

11100000 equates to 128 + 64 + 32 = 224

11110000 equates to 128 + 64 + 32 + 16 = 240

11111000 equates to 128 + 64 + 32 + 16 + 8 = 248

11111100 equates to 128 + 64 + 32 + 16 + 8 + 4 = 252

11111110 equates to 128 + 64 + 32 + 16 + 8 + 4 + 2 = 254

11111111 equates to 128 + 64 + 32 + 16 + 8 + 4 + 2 + 1 = 255