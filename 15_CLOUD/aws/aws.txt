#################################################
#                 AWS                           #
#################################################

=>sudo chmod 777 -R destinationFolder/*
Allow ec2 file permission

=>/mnt/efs/fs1
MetadataURL is http://169.254.169.254/latest/meta-data
  
  
SSM
================================================
=>aws ssm get-parameters-by-path --path /myapp/prod/ --recursive
=>aws ssm get-parameters-by-path --path /myapp/prod/ 
=>aws ssm get-parameters --name /myapp/prod/db-url /myapp/prod/db-pass
=>aws ssm get-parameters --name /myapp/prod/db-url /myapp/prod/db-pass --with-decryption

	  
#!/bin/bash
sudo apt update -y
sudo apt install nginx -y
sudo systemctl enable nginx
echo "<h1>Hello World from $(hostname -f)</h1>" > /usr/share/nginx/html/index.html


#!/bin/bash
yum update -y
yum install -y httpd
systemctl start httpd
systemctl enable httpd
echo "<h1>Hello World from $(hostname -f)</h1>" > /var/www/html/index.html


$ssh -i your-key.pem ubuntu@ec2-instance-public-ip
#Access EC2 with ssh

$scp -i your-key.pem  /path/to/local/file.txt ubuntu@13.233.103.153:/path/to/ec2/
#Copy file to EC2 from local-pc




$sudo scp -i my-ec2-kye.pem  index.nginx-debian.html ubuntu@13.233.103.153:/var/www/html/
Copy file to ec2


#!/bin/bash
sudo apt update -y
sudo apt install nginx -y
sudo systemctl enable nginx
echo "<h1>Hello World from $(hostname -f)</h1>" > /var/www/html/index.nginx-debian.html


=>ssh -i Myec2key.pem ec2-user@65.2.191.189
=>sudo scp -i my-ec2-kye.pem ./my-ec2-kye.pem ubuntu@13.201.65.16:/home/ubuntu/
=================================================
#EC2 | Helping Heand | Example
=================================================

=>sudo chown -R ec2-user /var/www/html
=>sudo chmod -R 755 /var/www/html
For EC2 httpd permission error






=================================================
#Code | Helping Heand | Example
=================================================


#Node Lambda API
-------------------------------------------------
export const handler = async (event) => {
  // TODO implement
  const response = {
    statusCode: 200,
    body: JSON.stringify('Hello from Lambda!'),
  };
  return response;
};



export const handler = async (event) => {
  
  //
  
  // Business logic will be here
    
  //
  
  
  return "This is my final response data !";
};



// index.mjs

// Lambda handler function
export const handler = async (event, context) => {
  try {
    // Your Lambda function logic goes here

    // Return a response
    return {
      statusCode: 200,
      body: JSON.stringify({ message: 'Lambda function executed successfully' }),
    };
  } catch (error) {
    // Handle errors
    return {
      statusCode: 500,
      body: JSON.stringify({ error: 'Internal Server Error' }),
    };
  }
};





#PythonLabda
-------------------------------------------------
import json

def lambda_handler(event, context):
    body = "Hello from Lambda!"
    statusCode = 200
    return {
        "statusCode": statusCode,
        "body": json.dumps(body),
        "headers": {
            "Content-Type": "application/json"
        }
    }
	




=================================================
#S3 | 
=================================================
S3 Public access
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::simpel-web-client/*"
        }
    ]
}



For S3 Public access, add this in Bucket Policy

{
    "Version": "2008-10-17",
    "Id": "PolicyForPublicWebsiteContent",
    "Statement": [
        {
            "Sid": "PublicReadGetObject",
            "Effect": "Allow",
            "Principal": {
                "AWS": "*"
            },
            "Action": "s3:GetObject",
            "Resource": "arn:aws:or-your-aws-bucket/*"
        }
    ]
}

