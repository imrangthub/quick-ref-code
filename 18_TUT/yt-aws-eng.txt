#################################################
#                 AWS-ENG                       #
#################################################




=================================================
##Introduction
=================================================


Welcome to this AWS course!
In this tutorial, we’ll cover the fundamentals of AWS—what it is, why it’s important, and how this course will help you.

AWS is massive, with countless services.
If you're new to cloud computing or want to build a strong foundation, this course is for you!

You'll learn about core AWS services like computing, storage, networking, and security.
Planning for an AWS certification? This course gives you a solid overview to get started!

And remember—AWS documentation is a goldmine! It’s detailed, clear, and packed with examples.

Let’s dive in and start mastering AWS! 🚀





2:00
=============
🔹 Topics Covered in This AWS Tutorial!

Here’s what you’ll learn in this course:

✅ Introduction – A quick overview of what this course covers.

✅ Opening AWS Account & Free Tier – Step-by-step guide to creating an AWS account and exploring the free tier.

✅ Getting Started – Setting up AWS and preparing to dive into cloud services.

✅ Cost & Budgets – How to manage AWS costs and set budget limits.

✅ Users, Roles & IAM – Understanding different AWS user roles and IAM (Identity and Access Management).

✅ AWS Architecture, Regions & AZs – An overview of AWS infrastructure, regions, and availability zones.

✅ Hands-on with EC2 – A deep dive into AWS’s most popular service: Elastic Compute Cloud (EC2).

✅ AWS Storage Services – Exploring AWS storage options like S3, EBS, and Glacier.

✅ Databases in AWS – Understanding AWS database services like RDS, DynamoDB, and more.

✅ ELB & ASG – Load balancing (ELB) and auto-scaling (ASG) for high availability.

✅ AWS Managed Services – Exploring fully managed AWS solutions.

✅ AWS Serverless – Working with AWS Lambda and other serverless services.

✅ AWS Queues & Streams – Understanding SQS, SNS, and Kinesis for messaging and streaming.

✅ Route 53 & CDN – Domain management and content delivery using AWS services.

✅ AWS Networking – Exploring AWS networking and infrastructure.

✅ Security & Monitoring – Best practices for AWS security, logging, and monitoring.

✅ AWS Machine Learning – Getting started with AWS AI/ML services.

✅ AWS Well-Architected Framework – Best practices for designing scalable, secure AWS solutions.

✅ Running Real-World Projects – Hands-on project deployment in AWS.

✅ AWS Certification Guide – Preparing for AWS exams and certifications.

Let’s get started and master AWS! 🚀🔥





7:40
==================

Cloud Computing Explained:
Cloud computing provides on-demand access to computing resources via the internet, including applications, servers, storage, databases, and software.

It offers flexible services and hardware for businesses and personal use—just as much as you need.

💡 Pay-as-you-go Model: You only pay for what you use.
If you’re not using resources, you won’t be billed!

Simple, scalable, and cost-efficient! 🚀




15:30
================
Cloud Service Models & Key Characteristics Explained

Let’s talk about Cloud Service Models:

✅ IaaS (Infrastructure as a Service) – Provides virtualized computing resources like servers, storage, and networking.

✅ PaaS (Platform as a Service) – Offers a complete platform that includes infrastructure and tools to develop applications.

✅ SaaS (Software as a Service) – Delivers software applications over the internet, no installation required!

AWS as a Cloud Provider
AWS is one of the top cloud providers out there, offering a wide range of services.

Now, let’s explore Key Characteristics of Cloud Services:

🔹 On-Demand Self-Service – You can provision and manage resources as needed, without any intervention from the service provider.

🔹 Broad Network Access – Cloud services are accessible from anywhere, as long as you have an internet connection.

🔹 Rapid Elasticity – Scale your resources up or down quickly based on your needs, perfect for handling traffic spikes.

🔹 Measured Service – Resources are metered, so you’re billed based on actual usage.

AWS Cost Explorer
With AWS, you can easily check your costs:

Assess costs for specific services based on your usage.
Choose regions and services, and see how they impact the cost.
Generate a simple bill to get an idea of how much you’ll pay for your system.
With this, you can predict costs and manage your cloud budget effectively. 🚀





24:20
===============
AWS offers over 200 different services across various categories like computing, storage, databases, machine learning, security, networking, and more!

Basic AWS Services
✅ Compute Services:

EC2 (Elastic Compute Cloud) – Scalable virtual servers in the cloud for running applications and workloads.
✅ Networking:

VPC (Virtual Private Cloud) – Create isolated sections of the AWS Cloud for secure networking.
Route 53 – Scalable and highly available DNS web service.
✅ Storage & Content Delivery:

S3 (Simple Storage Service) – Scalable and highly durable object storage.
EBS (Elastic Block Store) – Block-level storage volumes for EC2 instances.
Glacier – Low-cost, long-term archival storage.
CloudFront – CDN service for securely delivering data, videos, apps, and APIs globally.
✅ Databases:

RDS (Relational Database Service) – Managed relational databases supporting MySQL, PostgreSQL, Oracle, and SQL Server.
DynamoDB – Fully managed NoSQL database with automatic scaling.
These services are the building blocks for deploying powerful applications on AWS. 🚀





28:00
======================
Before we dive into exploring AWS services, the first step is to create an AWS account.

In the next video, we'll walk you through the process of opening an account, what you need to get started, 
and how to take advantage of AWS’s free tier.

Stay tuned, and let's get started!








=================================================
Opening AWS Account and Free Tier
=================================================
"Hey everyone! Welcome to this tutorial.
    Today, we’ll see how to create an AWS account and explore the Free Tier benefits.
    Let’s get started!"

    A valid email address 📧
    A credit or debit card 💳
    A phone number 📱
    A billing address 🏠
    Acceptance of AWS Terms & Conditions ✅






2:20
=============
Let's start the account opening process using this link:
    SignUp Link: https://console.aws.amazon.com/console/home?nc2=h_ct&src=header-signin


Or

Search for AWS and go to the Create an Account link.

I already have an AWS account, so I'm not going to open a new one again.
However, I will show the form and provide step-by-step screenshots for creating an account.


Step 1: Enter Account Details
    Provide your account email and root username.
    You'll receive an email verification code.
    Enter the code and click Verify.


Step 2: Provide Contact Information
    Fill in your country, city, postal code, phone number, etc.

then anohter form asky you for Billing information :
    Add your credit/debit card number for payment verification.


and now final step:
     Select a support plan—for learning purposes, choose "Basic Support", which is free.




4:20
================================
"Hey everyone! In this video, we’ll explore how AWS Free Tier works and what policies you need to be aware of.
Let’s dive in!"



[WHAT IS AWS FREE TIER?]
✅ AWS Free Tier gives you 1 year of free access to select AWS services.
✅ Each service has different limits and policies.
✅ You can find full details on the AWS website or by searching on Google.

[IMPORTANT THINGS TO KNOW]
✅ Watch your usage carefully to avoid unexpected charges.
✅ Example: EC2 (Virtual Machine) allows 720 hours per month under Free Tier.
✅ If you don’t stop the service, even after signing out or closing your browser, it keeps running on AWS servers, and you might exceed your Free Tier limit.

[LIMITATIONS]
✅ Not all AWS services are included in Free Tier.
✅ Some services, like EC2, only offer specific instance types (CPU, memory).
✅ Always check AWS documentation for clear details.

"That’s how AWS Free Tier works!
In the next video, we’ll start using AWS services hands-on.







=================================================
Getting Started
=================================================

"Hey everyone! Today, we’re going to explore AWS for the first time.
Let’s start by logging in and understanding how to work with AWS."


[WAYS TO ACCESS AWS]
✅ You can use AWS in three ways:
1️⃣ AWS Management Console – Login with a password 🖥️
2️⃣ Command Line Interface (CLI) – Uses access keys for authentication 💻
3️⃣ Software Development Kit (SDK) – For automation and integration using programming languages 📜

[BEST OPTION FOR BEGINNERS]
✅ After logging in, you’ll see the AWS Management Console.
✅ For learning purposes, I highly recommend using the Management Console because it’s easy to navigate.

[WHEN TO USE CLI & SDK]
✅ CLI – Best for faster operations once you gain expertise.
✅ SDK – Ideal for automation, letting software interact with AWS without human intervention.
✅ AWS SDK supports almost all popular programming languages.

[OUTRO]
🎬 Presenter:
"That’s how you access AWS!
In the next video, we’ll start using AWS services hands-on.





4:20
====================
To get started, go to the AWS Management Console and search for a service, such as EC2, RDS, S3, etc.

Here, you will see different services along with their details.





5:00
=========================
"Hey everyone! Today, we’re launching our first AWS EC2 instance.
Let’s go step by step and get it running!"

[STEP 1: INSTANCE CONFIGURATION]
✅ Give a Name – Choose a name for your instance.
✅ Select an OS – We’ll pick Ubuntu for this tutorial.
✅ Choose Instance Type – For Free Tier, select t2.micro (perfect for learning).

[STEP 2: KEY PAIR]
✅ Create or select a key pair – This is needed for remote access via CLI.
✅ We’ll cover how to use key pairs in a future video.

[STEP 3: NETWORKING]
✅ Select a Security Group – Works like a firewall for your instance.
✅ We’ll have a dedicated video on networking and security, so don’t worry for now.

[STEP 4: STORAGE]
✅ Allocate storage space – We’ll leave it at the default setting for now.

[STEP 5: LAUNCH INSTANCE]
✅ Click the Launch button! 🚀
✅ The instance is now starting – It may take a few minutes to boot up.

[CHECK INSTANCE DETAILS]
✅ Once running, you can view details like:

Private IP
Public IP
Public DNS
[OUTRO]
🎬 Presenter:
"And that’s it! Our EC2 instance is now running.
In the next video, we’ll dive deeper into working with EC2.








10:30
=================================
"Hey everyone! Welcome to today's tutorial. In this video, we’ll walk through how to make our newly created EC2 instance useful by installing packages on it and setting up a server. Let’s get started!"

Step 1: Login into the EC2 Instance

"Now that our EC2 instance is ready, we need to log into it to start installing some packages.
One way to do this is by clicking on this icon here, and it will automatically open the CLI mode for you."

Click the icon
"I’m clicking it now and, as you can see, I’m logged in."

Step 2: Check the Release Version

"Let’s first run a simple command to check the release version of our instance.
I’ll run the cat /etc/os-release command."

Run command
"As you can see, we have the release version details here."

Step 3: Update the Instance

"Before installing any package, just like on any Linux machine, we need to update the instance.
So, I’ll run sudo apt-get update to make sure everything is up to date."

Run command
"And that’s done!"

Step 4: Install the Nginx Server

"Now, let's install Nginx, which is a popular web server.
We’ll use the regular command: sudo apt-get install nginx."

Run command
"The installation is complete!"

Step 5: Check the Running Port

"Let's check if Nginx is running. But first, we need to verify the ports that are open on the instance."

Run command
"Ah! Looks like the net-tools package is missing. No worries, let’s install it."

Run command to install net-tools
"Alright, it’s installed!"

"Now, let’s check the ports again."

Run command to check ports
"Here it is! Nginx is running on port 80, as expected."

Step 6: Access the Server

"Now, let’s access the server.
To do this, we’ll use the public DNS or public IP of the EC2 instance, which you can find in the instance details section."

Show where to find the public IP in AWS Management Console
"Let’s grab the public DNS/IP and access the server."

Access the server via browser
"And there you go! We have the default Nginx page running on our AWS EC2 instance."

Outro:
"That’s it for today’s tutorial. We’ve successfully logged into our EC2 instance, installed Nginx, and accessed the server via the public IP.
Thanks for watching, and don’t forget to like and subscribe for more AWS tutorials!"







15:00
==================
No we’ll learn how to copy files from your local machine to your AWS EC2 instance.
We’ll go over multiple methods to do this, including using the CLI, Python SDK, and Software SDKs. Let’s dive in!"

Step 1: Using CLI in PowerShell

"First up, I’ll show you how to copy files using the CLI.
Since I’m on Windows, I’ll be using PowerShell to do this."

Show PowerShell example for copying files
"Here’s the command you would use in PowerShell to copy files from your local machine to the EC2 instance."

Step 2: Using AWS Python SDK

"Alternatively, if you prefer Python, you can use the AWS Python SDK to achieve this.
You can get the SDK from GitHub, and I’ve already added the link to the documentation."

Show GitHub link on the screen
"Just follow the instructions on the GitHub repo to get started with the Python SDK."

Step 3: Using Software SDKs (Node SDK Example)

"You can also use software SDKs to copy files, and here’s an example using the Node.js SDK."

Show Node.js SDK example
"This is how you would do it using the Node SDK. It’s pretty straightforward!"

Outro:

"That’s it for today’s tutorial! We’ve covered three different ways to copy files from your local machine to your AWS EC2 instance—using the CLI, Python SDK, and Software SDKs.
I hope this was helpful! Don’t forget to like, comment, and subscribe for more AWS tutorials. See you in the next video!"






=================================================
Cost And Budgets
=================================================








=================================================
User, Role and IAM User
=================================================



=================================================
AWS Architecture, Regions and AZ
=================================================



=================================================
Play with EC2
=================================================



=================================================
AWS Storage services
=================================================



=================================================
Database in AWS 
=================================================



=================================================
ELB, ASG
=================================================



=================================================
AWS Managed Services
=================================================



=================================================
AWS Serverless
=================================================



=================================================
AWS Queue and Streams
=================================================



=================================================
Route53 and CDN
=================================================




=================================================
AWS Networking
=================================================



=================================================
Security and Monitoring
=================================================



=================================================
AWS Machine Learning
=================================================



=================================================
AWS Well-Architected
=================================================



=================================================
Project run on AWS
=================================================



=================================================
AWS Certification
=================================================



