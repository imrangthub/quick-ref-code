#################################################
#                 LINUX-OS                      #
#################################################

=>uname -a
=>compgen -u
=>compgen -g
=>cat /etc/os-release
=>cat /proc/version
=>cat /etc/*-release
=>cat /etc/os-release | grep name -i
Kernel Version

=>grep MemTotal /proc/meminfo
=>free -m
=>df -kh .
=>ps -ef
=>cat /proc/meminfo
=>docker run --name test01 -d centos /bin/sh -c "while true; do echo Hello Imran; sleep8; done"
=>lscpu
=>lscpu | egrep 'Model name|Socket|Thread|NUMA|CPU\(s\)'
=>cat /proc/cpuinfo
=> grep 'cpu cores' /proc/cpuinfo | uniq

=>top


=>Ctrl+Alt+T
=> ./startup.sh 

=>which skype
=>shutdown
=>shutdown -h now
=>shutdown +10
=>shutdown -c
=>su - root

=>uptime
=>netstat -tulpn
=>netstat -an | grep 80

sudo apt autoremove

sudo apt autoclean
username@hostname:~$
play /home/imran/Music/FadedShadow.mp3
=================================================
#                  Basic                                          
================================================= 
=>du -sh
=>whoami
=>hostname
=>printenv
=>sudo nano /etc/sudoers


=>ps -ef
=>ps -ef | grep sys-log
Find all runing process

=>ps -ef|grep nginx
Find how many process runing



=>sudo tar xzvf unzipAbleFileNametar.gz
=>sudo mv moveFolderName /opt/myFolder/
=>sudo chown -R imran:imran /opt/myFolder



=>cat RELEASE-NOTES | grep "Apache Tomcat Version"
Tomcat version check

=>sudo find / -name "version.sh"
If you are not sure where is the version.sh file
then
=>/app/archive/artifactory-oss-6.12.0/tomcat/bin/version.sh
systemctl status nginx


=================================================
#SH | sh | shall script| cmd                                  
================================================= 
=>nohup sh my-syslog.sh &
=>nohup sh my-syslog.sh > sys-log.txt &


Exmp1
=====
while true
do
        echo "System is runing $(date) !"
        sleep 1
done

=================================================
#    File or Directory  | Operation    | Copy                                     
================================================= 

=>nano simpleFile.txt
=>scp simpleFile.txt remoateUser@remoteHost:/app/remoteMachin/filePath/
Copy file to remote server

=>scp remoateUser@remoteHost:/app/remoteMachin/filePath/someFile.txt /localMachin/filePath
Copy file from remote server


=>mv simpleFileV3.txt mySimpleFolder/
Move file to folder

=>rm -r mySimpleFolder/
Delete folder


=>scp -r /home/imran/localMachineFolder remoateUser@remoteHost:/app/remoteMachineFolder/path
Copying Directories local machine to remote machine

=>scp  -r remoateUser@remoteHost:/app/mySimpleFolder /home/imran/localhMachinePath
Copying directories from remote machine to local machine



=>ls -a
Show hiddne file 
=>ls -R
Show all file and folder inside of folder


=>cp fileName /copyFolder/
Copy file

=>cp -rf targetFolder /folderPath/
Copy folder

=>cp -rf /etc/tomcat/* /otherFolder/
Copy all contain

=>mv oldFileName newFileName
Rename file

=>mv myFolder /locationFolder/
Move file 

=>rm -rf /mhFolder/*
Delete every thing in mhFolder


#TAR |  ZIP
-------------------------------------------
=>tar -cvf myTarFile.tar *
Make tar file with all contain in current folder
=>tar -cvf myTarFile targetFolder/
Make Tar
=>tar -tvf myTarFile
=>tar -xvf myTarFile
UnTar
=>tar -rf myTarFile newFile
=>tar -xvf myTarFile reqFile
Add/emit a file to exists tar


=>gzip myFolder
=>sudo unzip -d /opt/gradle gradle-5.6.1-bin.zip 
Zip/Unzip file



#Search
-------------------------------------------
=>ls *searchKeyword*
=>find . -name myFileName
Search file in the folder

=>locate filName
=>locate -i filName
=>locate *myFile*Name*
Search file in the system

=>grep fWord myTextFile.txt
=>grep 'Please find my sentence' myTextFile.txt
Search word in text file




=>scp localmachine/path_to_the_file username@server_ip:/path_to_remote_directory

=>scp -r /app/test/test.txt apihub@172.16.254.25:/app
=>scp -r cassandra.yaml C:
=>scp -r apihub@172.16.8.132:standalone.xml "C:"
=>docker cp e029d15afdfc:/etc/cassandra/cassandra.yaml C:/Z_MY_COMPUTER
=>docker cp C:/Z_MY_COMPUTER/cassandra.yaml a394ae84224c:/etc/cassandra



=>cd /etc/skel/
=>touch sharedFile
Sharing file for all user



=================================================
# User | Group                                      
================================================= 

=>adduser imran |  and other information
=>sudo passwd imran
Set new password
=>userdel imran

=>cat /etc/passwd
Check user list

=>su newUseraName
Switch user

=>grep -Po '^sudo.+:\K.*$' /etc/group
See number of super users in the available system: 

=>newgrp docker

Run the following command/ Login or logout: 


#Group
-----------------------------------------------
=>groupadd empGroup
=>cat /etc/group

=>sudo adduser $USER docker
=>usermod -G empGroup imranUser
=>usermod -G empGroup, otherGroup imranUser
=>newgrp docker
Add user in a group

=>gpasswd -d imranUser empGroup
Remove user from a group

=>groupmod -n newGroupName oldGroupName
Rename group

=>groupdel empGroup
Delete group


=>whoami
=>id -un

=>id -gn

=>id -Gn
=>groups

=>compgen -g
=>getent group
List all group names on Linux:


=>id -g -n imran
=>id -G -n imran
To print the primary/secondary group membership for a user called


=================================================
# Sucurity | Permissions  | access                                
================================================= 


#SSH
------------------------------------------------

=>ssh imran@192.168.1.514

=>mv pappjar pappjar_23032022
=>scp papp.jar imran@192.168.1.514:/home/imran


=>scp -r /home/imran/blPROJECT/deploymentProcess  imran@192.168.1.514:/home/imran/mySimpleFolder
Copying Directories to remote machine

=>scp  -r imran@192.168.1.514:/home/imran/mySimpleFolder /home/imran/blPROJECT/deploymentProcess
Copying directories from remote machine to local machine






=>chmod u/g/o +/- file/folder
Permissions Syntax

=>chmod u+w myFileName
=>chmod u+w,g+r,o+r myFileName
=>chmod 777 myFileName
Add file permission


=>chown imranUser myFolder
=>chmod .empGroup myFolder
=>chmod imranUser.empGroup myFolder

=>chown imranUser:empGroup myFolder
Add Owner permission


=>sudo su
Log in as root

=>sudo passwd root
For Change password

=>runlevel
Show current runlevel id

=>su - imran
Change system user


=>sudo chown userName:groudName fileName
Change Owner/Group of a File

=>sudo chown -R userName:groudName /path/to/directory/*
Change Owner/Group of All Files/Directories


=>sudo chmod a+rwx /szDirectoryName
=>sudo chmod -R 700 folder3



Id From 0 to 499 System generated and Other user generated


chmod a-w file (removes all writing permissions)
chmod o+x file (sets execute permissions for other (public permissions))
chmod u=rx file        (Give the owner rx permissions, not w)
chmod go-rwx file      (Deny rwx permission for group, others)
chmod g+w file         (Give write permission to the group)
chmod a+x file1 file2  (Give execute permission to everybody)
chmod g+rx,o+x file    (OK to combine like this with a comma)

u = user that owns the file
g = group that owns the file
o = other (everyone else)
a = all (everybody)

r = read aces to the file
w = write access
x = execute (run) access 


=================================================
#Networking | Net                                           
================================================= 

=>ip a
=>ifconfig

=>hostname -i 


=>host google.combine

=>netstat -tulpn
=>netstat -an | grep 80

=>sudo route
=>suod route add default gw 192.168.1.1
=>suod route del default gw 192.168.1.1

=>sudo apt-get install traceroute
=>traceroute google.com

 
=>sudo apt install net-tools


#SSH 
-------------------------------------------------
=>sudo apt install openssh-server



=================================================
#Service | systemd | Systemd Services                                     
=================================================

=>nano /etc/systemd/system/my_simple_service.service

=>sudo  systemctl daemon-reload
=>sudo systemctl start my_simple_service.service
=>sudo systemctl status my_simple_service.service
=>sudo systemctl stop my_simple_service.service

=>sudo systemctl enable my_simple_service.service
=>sudo systemctl disable my_simple_service.service
To enable/disable your service on every reboot



SimpleSerEx1
============
[Unit]
Description=My Simple Custome Service

[Service]
Type=simple
ExecStart=/bin/sh -c  'echo "Lgo written By SimpleService" >> /var/log/my_simple_service.log 2>&1'

[Install]
WantedBy=multi-user.target


Example2
=========

BashScript:
while true
do
        echo "System is runing !" >>/home/imran/imranMadbar/myPROJECT/linuxScript/service-log.txt
        date >> /home/imran/imranMadbar/myPROJECT/linuxScript/service-log.txt
        sleep 1
done

=>sudo chmod +x simple-system-monitor.sh


Simple system monitor service:
[Unit]
Description=MySimpleShellScript

[Service]
ExecStart=/home/imran/imranMadbar/myPROJECT/linuxScript/simple-system-monitor.sh

[Install]
WantedBy=multi-user.target


=>sudo nano /lib/systemd/system/simple-system-monitor-service.service 
=>sudo systemctl daemon-reload 
=>sudo systemctl start simple-system-monitor-service.service 
=>sudo systemctl status simple-system-monitor-service.service 
=>sudo systemctl start simple-system-monitor-service.service 

=>sudo systemctl enable simple-system-monitor-service.service 
=>cd /etc/systemd/system/multi-user.target.wants
=>sudo systemctl disable simple-system-monitor-service.service 




=================================================
#Ufw Firewall                  
================================================= 

=>sudo ufw status
=>sudo ufw disable



=>sudo apt install ufw
=>sudo ufw status
Check the allow app list
=>sudo ufw allow ssh

=>sudo ufw delete allow ssh
=>sudo ufw delete allow 22/tcp
 

=================================================
#Software|repositories|packages|install|Tools                  
================================================= 


=>sudo apt install synaptic 
=>sudo apt-get install vlc

=>sudo apt show
=>sudo apt search "web browser"
=>sudo apt install chromium-browser
Finding and Installing New Software


Install  Net tools
=>sudo apt install net-tools
 


=================================================
#    Jar Operation       | java  | JAVA
================================================= 
=>which java
=>dirname $(dirname $(readlink -f $(which javac)))
=>java -XshowSettings:properties -version 2>&1 > /dev/null | grep 'java.home' 
=>update-alternatives --config java
=>sudo update-alternatives --config java
Check all java version on this mechine

=>java -jar -Dserver.port=8083 simpleJar.jar
=>java -jar -Dspring.profiles.active=dev-bl spring-service-with-profile.jar
=>java -jar -Dspring.profiles.active=dev-bl service-with-port.jar --server.port=8083

find out which process is listing upon a port
=>netstat -tulpn
=>netstat -tulpn | grep :9940


=>nohup java -jar spring-boot-simple-web-1.0.0.RELEASE.jar > myLogFile.txt &

=>nohup /app/somedir/jdk1.8.0_231/bin/java -jar some-app.jar --spring.profiles.include=pre-prod --server.port=8080



#Install JAVA 
------------------------------------------------------------------------------------------

=>sudo mkdir  -p /opt/jdk
=>sudo cp -rf /home/sivasai/jdk-8u251-linux-x64.tar.gz /opt/jdk/
=>cd /opt/jdk/
=>sudo tar -zxf jdk-8u251-linux-x64.tar.gz
=>sudo update-alternatives --install /usr/bin/java java /opt/jdk/jdk1.8.0_333/bin/java 100
=>sudo update-alternatives --install /usr/bin/java java /opt/jdk/amazon-corretto-11.0.15.9.1-linux-x64/bin/java 100

=>sudo  nano /etc/environment
JAVA_HOME=/opt/jdk/jdk1.8.0_333
JRE_HOME=/opt/jdk/jdk1.8.0_333/jre

=>java -version
=>sudo update-alternatives --display java
=>sudo  update-alternatives --list java
=>sudo update-alternatives --config java

=>sudo update-alternatives --remove java /opt/jdk/jdk1.8.0_333/bin/java


=>nano ~/.bashrc
export JAVA_HOME="/opt/jdk/jdk1.8.0_333/"
export PATH=$PATH:$JAVA_HOME/bin

save the file

=>source ~/.bashrc
=>echo $JAVA_HOME




=================================================
# System  |  Update | Upgrade                        
================================================= 

=>init 3 // Text mode
=>startx 
=>init 0 shatdown
=>init 6 or =>reboot
=>who 
Current log in user


=>history 
Show uses caommand from start to at now

=>history -c
Clear command history


=>dpkg --list
Currently installed programs

=>sudo apt-get remove packagName
=>sudo apt-get --purge remove packagName
=>sudo aptitude remove packagName
Uninstalling Programs with Terminal

=>sudo apt-get dist-upgrade

=>sudo apt-get autoremove

=>sudo systemctl daemon-reload 
Reload the systemd daemon service to load newly create files.

=>sudo apt update
Syncs your local copy of available packages and their versions against the current-state index with the repositories

=>sudo updatedb



=================================================
# MySQL                  
================================================= 
=>sudo mysql -u root -p -e 'SHOW VARIABLES LIKE "%version%";'
=>sudo mysqladmin -u root -p version
=>SELECT version();


=>service mysql start
=>systemctl status mysql
=>service mysql stop



#InstallMySql
--------------------------------------------------------------------------------------------------
=>sudo apt install mysql-server
=>sudo mysql_secure_installation
Security configuration



=>sudo apt install ./mysql-workbench-community_8.0.20-1ubuntu20.04_amd64.deb
=>snap install mysql-workbench-community
=>sudo snap connect mysql-workbench-community:password-manager-service :password-manager-service


mysql>update mysql.user set plugin = 'mysql_native_password' where User='root';
mysql>FLUSH PRIVILEGES;
mysql>exit;
Access denied for user 'root'@'localhost'


=================================================
#Font | Text                  
================================================= 
=>cd /usr/share/fonts/
=>sudo apt-get install fontconfig


=>fc-list
=>fc-list : family | sort | uniq

=>fc-list | grep "DejaVu Sans"
=>sudo find / -type f -name "*.ttf"








=================================================
# Media |  Audio                  
================================================= 
 =>suod apt install sox
 => sudo apt-get install libsox-fmt-mp3
 =>sudo apt-get install sox libsox-fmt-all



=================================================
#Linux | Info | Desc | documentation                            
=================================================

#Tidying Up Packages
-------------------------------------------------
apt reinstall: Reinstalls the package from the repository source, useful if you think you've broken a program that you like.
apt remove: Removes a package, but leaves user-configured files in place.
apt purge: Removes a package and also all associated files related to it, including user configuration files.
apt autoremove: Deletes packages that had been installed as dependencies but, given that they're obsolete or the other package was removed, are now orphaned. Running this command occasionally can recover some disk space.



Linux software is available from repositories—servers that hold software that can be installed for a particular distribution. 
A repository is stored on one or more servers known as mirrors. Each item of software within a repository is called a package. 
There are many package formats, but Ubuntu uses the Debian package format. 
You'll find most of the things you need in the default repositories, but you can add and enable some extra repositories to acquire additional software.


Using graphical packages such as Ubuntu Software and Synaptic aren't the only ways to install software using Ubuntu.
You also can install packages from the command line using apt-get. 
While the command line may seem daunting, you will come to appreciate the power of apt-get after using it for a bit.


Some packages require specific other packages as well as their own; others require that some packages be removed before they'll work. 

The files for installing software is usually called a package and packages come in many different flavors. 
Ubuntu packages end in .DEB.


#APT
--------------------------------------------------
APT is the default package-management framework for Ubuntu and several other popular distributions.


apt-get upgrade: 
Updates the package but does not, by default, delete other packages or add new ones. 
Instead, the upgrade will fail if it requires added or deleted dependencies.
apt-get dist-upgrade: 
Updates and deletes prior versions of the package, including dependencies.
apt upgrade: 
Functions like apt-get upgrade --with-new-packages, which is a fancy way of saying that it updates, 
but does not delete prior versions, yet it does install new packages (but won't delete them) if doing so is required to satisfy dependencies.



#Common File Permissions
--------------------------------------------------------------------------------------------------------------------------------------------

Setting			Numerical			Owner						Group						Others
-rw——-			600				Read/Write	 	 
-rw-r—–				640				Read/Write				Read	 
-rw-r–r–				44				Read/Write				Read						Read
-rw-rw-r–			664				Read/Write				Read/Write				Read
-rwx——			700				Read/Write/Execute	 	 
-rwxr-xr-x			755				Read/Write/Execute	Read/Execute			Read/Execute
-rwx–x–x			711				Read/Write/Execute	Execute					Execute
-rw-rw-rw-			666				Read/Write				Read/Write				Read/Write
-rwxrwxrwx		777				Read/Write/Execute	Read/Write/Execute	Read/Write/Execute
