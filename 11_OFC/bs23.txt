#################################################
#                 BS23                         #
#################################################
BS0930
Md.Imran Hossain
Software Engineer
md.imran@brainstation-23.com
Trello:imranbs23trl
GitBl:imranbs23gtlab
GitUcbl:imranbsgtlab
2583
vpn.brainstation23.com
172.16.231.253
Multiplication Factor - 1
Level - IC3
Skype:mdimran.bs23@gmail.com
https://bs23.talentlms.com


Server Deployment
==========================================
=>ps -fC java
=>netstat -tulpn
=>kill -9 34071
=>tail -f nohup.out

--server.port=8888
--spring.profiles.active=dev-bl
--spring.cloud.config.uri=192.168.1.2:9091 
--CONFIG_SERVER=configserver:http://172.16.8.132:7085
--eureka.client.serviceUrl.defaultZone=http://192.168.1.2:7082/eureka/

http://172.16.8.132:7085/

keycloak Server run
==========================================
=>./standalone.sh
Test from the keycloak app bin folder
=> nohup ./standalone.sh -b=0.0.0.0 &



=================================================
#    PROJECT |  BANK | UCBL                                          
================================================= 

Add Jar to Class Pom:
-----------------------------------------------
mvn install:install-file -Dfile=ojdbc6-11.2.0.4.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.2.0.4 -Dpackaging=jar
mvn install:install-file -Dfile=ojdbc6-11.2.0.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.2.0 -Dpackaging=jar




=================================================
#    Nexus Repository                                        
================================================= 

=>./nexus start
=>./nexus stop
=>./nexus status

\$ cd /etc/init.d
$ chkconfig --add nexus
$ chkconfig --levels 345 nexus on
$ service nexus start
Starting Nexus Repository Manager Pro...
$ tail -f /usr/local/nexus/logs/wrapper.log




apihub Debuging Server issue
===========================


=>http://172.16.254.193:7171/octopus-iris/actuator/info
=>http://172.16.254.193:7171/octopus-iris/swagger-ui.html
Nginx Loadbalancer


DebugScript1:
-----------------------------------

=>tail -f access.log | grep -v '200'  | grep -v '202'
Filtering status code except 200 and 202 

=>cat access.log | awk '{print $(NF-2)}'
Printing only destination IP: 

=> cat access.log | awk '{print $(NF-2)}' | sort | uniq --count
Print destination IP count: 


=>cat access.log | grep –v '200'  | grep –v '202' | awk '{print $(NF-2)}' | sort | uniq --count
You can mix between these commands to achieve your goal. For example, you want to see which destination server is failing:


=>tail -f access.log | grep '254.194'


DebugScript2:
-----------------------------------

=>tail -100000 ../logs/access.log | awk '{ print $8}'|sort |uniq --repeated --count
Print load balanced IPs and their count

=>tail -10000 access.log |awk '{print $12,$8}'|sort|uniq --repeated --count
Print load balanced IPs and their status count


=>tail -10000 /app/apihub/Nginx_LB/logs/access.log | grep prepaid|awk '{ total += $14; count++ } END { print total/count }'
Average RTT

=>for (( i = 5; i >=0; i-- )) ; do grep $(date +%d/%b/%Y:%R -d "-$i min") /app/apihub/Nginx_LB/logs/access.log; done| awk '{ print $8}'|sort |uniq --repeated --count
Last 5 minute request satus


=>grep prepaid access.log|tail -1000|awk '{ if ( $14 > .750 ) print $0 }'|wc -l
If RTT greater than:


=>for i in {1..20}; do curl -o /dev/null -s -w '%{http_code},%{time_namelookup},%{time_connect},%{time_pretransfer},%{time_starttransfer}, %{time_total}s\n' "http://10.74.10.10:443/api/v1/subscriptions/32286622/combined-usage-reports"  ; done
20 continuous calls to check DBSS API performance 

=>tail -1000 ../logs/access.log | grep prepaid|awk '{ if (max<$14){ max=$14 }}END {print max}'
Max RTT





=================================================
#SBU TELCO MEETING |  2:30PM-4:00PM       
================================================= 





##SBU TELCO L10 Oct-Dec '22 | 03 Nov, 2022
-------------------------------------------------
Summary:


INP:
SBU sheet filap



----------------------------------------------
Ticket: 03 Nov, 2022
1)Technical discussion              5hr   ->5
2)Feature Delivery                  80%   ->85%
3)Code Review                       4hr   ->4
4)UAT & QA feedback                 8hr   ->12
5)Operational and DevOps Activity   8hr   ->8








Problem Solving Mode (1 Hour)	

	1)Unsettled inquiry for development status, repoting.
	2)Instant feature development result. 	
	3)Rush development requirment.


Problem cultural:
	1)Breaking sprint planning for high priority requirment.
	2)DevOps issue, Server Paching and Deployment activity (Weekday or day after another)
 




