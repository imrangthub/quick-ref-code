#################################################
#                 BS23                         #
#################################################
BS0930
Md.Imran Hossain
Senior Software Engineer
md.imran@brainstation-23.com
Trello:imranbs23trl
GitBl:imranbs23gtlab
GitUcbl:imranbsgtlab
2583
vpn.brainstation23.com
172.16.231.253
Multiplication Factor - 1
Level - IC3
Skype:mdimran.bs23@gmail.com
https://bs23.talentlms.com





=================================================
#SBU TELCO MEETING |  2:30PM-4:00PM       
================================================= 

SelfCare for Corporate SIM user.

Imam /Siras 

Business and Stack holder present for then Corporate user






##SBU TELCO L10 Oct-Dec '22
-------------------------------------------------
Summary:


INP:
SBU sheet filap



----------------------------------------------
Ticket: 27 Nov, 2022

1)Technical discussion              5hr   ->16
2)Feature Delivery                  80%   ->80%
3)Code Review                       4hr   ->4
4)UAT & QA feedback                 16hr   ->12
5)Operational and DevOps Activity   8hr   ->8





=================================================
#APIHUB | Banglalink                                 
================================================= 

Server Deployment
==========================================
=>ps -fC java
=>ps -ef | grep otp
=>netstat -tulpn
=>kill -9 34071
=>tail -f nohup.out

--server.port=8888
--spring.profiles.active=dev-bl
--spring.cloud.config.uri=192.168.1.2:9091 
--CONFIG_SERVER=configserver:http://172.16.8.132:7085
--spring.cloud.config.uri=http://localhost:7185
--eureka.client.serviceUrl.defaultZone=http://192.168.1.2:7082/eureka/



NEIR-SERVICES
--------------
config
config-server
neir-edge-gateway
neir-discovery-eureka
neir-identity-register
neir-zipkin-server


OPENAPI- SERVICES
-------------------
openapi-edge-gateway
openapi-discovery-eureka

openapi-otp
openapi-iris
openapi-provisioning
openapi-evservice









=================================================
#  keycloak Server run
==========================================
=>./standalone.sh
Test from the keycloak app bin folder
=> nohup ./standalone.sh -b=0.0.0.0 &


=================================================
#    Nexus Repository                                        
================================================= 

=>./nexus start
=>./nexus stop
=>./nexus status

\$ cd /etc/init.d
$ chkconfig --add nexus
$ chkconfig --levels 345 nexus on
$ service nexus start
Starting Nexus Repository Manager Pro...
$ tail -f /usr/local/nexus/logs/wrapper.log




apihub Debuging Server issue
===========================


=>http://172.16.254.193:7171/octopus-iris/actuator/info
=>http://172.16.254.193:7171/octopus-iris/swagger-ui.html
Nginx Loadbalancer


DebugScript1:
-----------------------------------

=>tail -f access.log | grep -v '200'  | grep -v '202'
Filtering status code except 200 and 202 

=>cat access.log | awk '{print $(NF-2)}'
Printing only destination IP: 

=> cat access.log | awk '{print $(NF-2)}' | sort | uniq --count
Print destination IP count: 


=>cat access.log | grep –v '200'  | grep –v '202' | awk '{print $(NF-2)}' | sort | uniq --count
You can mix between these commands to achieve your goal. For example, you want to see which destination server is failing:


=>tail -f access.log | grep '254.194' | grep -v '200'  | grep -v '202'


DebugScript2:
-----------------------------------

=>tail -100000 ../logs/access.log | awk '{ print $8}'|sort |uniq --repeated --count
Print load balanced IPs and their count

=>tail -10000 access.log |awk '{print $12,$8}'|sort|uniq --repeated --count
Print load balanced IPs and their status count


=>tail -10000 /app/apihub/Nginx_LB/logs/access.log | grep prepaid|awk '{ total += $14; count++ } END { print total/count }'
Average RTT

=>for (( i = 5; i >=0; i-- )) ; do grep $(date +%d/%b/%Y:%R -d "-$i min") /app/apihub/Nginx_LB/logs/access.log; done| awk '{ print $8}'|sort |uniq --repeated --count
Last 5 minute request satus


=>grep prepaid access.log|tail -1000|awk '{ if ( $14 > .750 ) print $0 }'|wc -l
If RTT greater than:


=>for i in {1..20}; do curl -o /dev/null -s -w '%{http_code},%{time_namelookup},%{time_connect},%{time_pretransfer},%{time_starttransfer}, %{time_total}s\n' "http://10.74.10.10:443/api/v1/subscriptions/32286622/combined-usage-reports"  ; done
20 continuous calls to check DBSS API performance 

=>tail -1000 ../logs/access.log | grep prepaid|awk '{ if (max<$14){ max=$14 }}END {print max}'
Max RTT



By ImV:
=================================================
Avg. RTT: 
	tail -10000 /app/apihub/Nginx_LB/logs/access.log | grep prepaid|awk '{ total += $14; count++ } END { print total/count }'


Max RTT:  
	tail -100000 ../logs/access.log | grep prepaid|awk '{ if (max<$14){ max=$14 }}END {print max}'


Min. wise Transactions:
	for i in `grep "26/Jul/2022:11:4[0-9]" /app/apihub/Nginx_LB/logs/access.log |grep available-product|cut -d "[" -f 2|cut -d ":" -f 1,2,3|awk '{print $1}'|sort|uniq`; do a=`grep $i /app/apihub/Nginx_LB/logs/access.log |grep available-product|cut -d "[" -f 2|awk '{print $1}'|wc -l`; echo $i,$a; done

TPS at certain Hours:
	for i in `grep "26/Jul/2022:11:4[0-9]" /app/apihub/Nginx_LB/logs/access.log |grep available-product|cut -d "[" -f 2|awk '{print $1}'|sort|uniq`; do a=`grep $i /app/apihub/Nginx_LB/logs/access.log |grep available-product|cut -d "[" -f 2|awk '{print $1}'|wc -l`; echo $i,$a; done


No. of High RTT Request Counts:
	  cat ../logs/access.log | grep prepaid|awk '{ if ( $14 > .750 ) print $0 }'|wc -l

	  grep prepaid access.log|awk '{ if ( $14 > .750 ) print $0 }'|wc -l


Overall RTT: 
	tail -100000 /app/apihub/Nginx_LB/logs/access.log|awk '{ total += $14; count++ } END { print total/count }'


Error Rate:
	tail -100000 ../logs/access.log | awk '{ print $8}'|sort |uniq --repeated --count



Actual Error Count:  
	tail -10000 ../logs/access.log |awk '{if ( $8 == 500 ) print $0}' |wc -l



Last % mins Log status:

	for (( i = 5; i >=0; i-- )) ; do grep $(date +%d/%b/%Y:%R -d "-$i  min")  /app/apihub/Nginx_LB/logs/access.log; done|wc -l 

	for (( i = 5; i >=0; i-- )) ; do grep $(date +%d/%b/%Y:%R -d "-$i  min")  /app/apihub/Nginx_LB/logs/access.log; done| awk '{ print $8}'|sort |uniq --repeated --count


Minwise Max TPS:
	for i in `grep available-product access.log.280722|awk '{ print $3}'|cut -d ":" -f 1,2,3|cut -d "[" -f 2|sort|uniq`; do a=`grep $i access.log.280722 |grep available-product|cut -d "[" -f 2|awk '{print $1}'| sort|uniq --repeated --count|awk '{ if (max<$1){ max=$1 }}END {print max}'`; echo $i,$a; done


10 min wise Max TPS:

	 for y in `grep available-product access.log | awk '{ print $3}' | cut -d ":" -f 1,2,3 | cut -d "[" -f 2 | cut --complement -c 17 | sort | uniq`; 
                do 
                        a=`grep $y $i |grep available-product|cut -d "[" -f 2|awk '{print $1}'| sort|uniq --repeated --count|awk '{ if (max<$1){ max=$1 }}END {print max}'`; 
                       
			echo $y,$a  ;
                        
                done

Minwise RTT @ Specific Hours:
	for i in `grep product-offer access.log.030922|grep "03/Sep/2022:1[8-9]"| awk '{ print $3}'|cut -d ":" -f 1,2,3|cut -d "[" -f 2|sort|uniq`; do a=`grep $i access.log.030922 |grep product-offer|cut -d "[" -f 2|awk '{print $1}'| sort|uniq --repeated --count|awk '{ total += $14; count++ } END { print total/count }'`; echo $i,$a; done

To Get Max TPS @Specific Second:
	 grep "2022:17" /app/apihub/Nginx_LB/logs/logarchive/access.log.141122| awk '{print $3}'|cut -d "[" -f 2|awk '{print $1}'|sort|uniq --repeated --count|awk '{ if (max<$1){ max=$1; tm=$2 }}END {print max,tm}'



















=================================================
#    PROJECT |  BANK | UCBL                                          
================================================= 

Add Jar to Class Pom:
-----------------------------------------------
mvn install:install-file -Dfile=ojdbc6-11.2.0.4.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.2.0.4 -Dpackaging=jar
mvn install:install-file -Dfile=ojdbc6-11.2.0.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.2.0 -Dpackaging=jar



